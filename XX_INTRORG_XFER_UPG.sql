-------------------
---Done For PCL
---EBS IR/ISO Cost Transfer
-------------------

DECLARE
 ERRBUFF VARCHAR2(100);
 RETCODE VARCHAR2(100);
BEGIN
XX_INTRORG_XFER_UPG (ERRBUFF, RETCODE, 23274, 23274, 'JUL-23');
EXCEPTION
WHEN OTHERS THEN
NULL;
END;






CREATE OR REPLACE PROCEDURE APPS.XX_INTRORG_XFER_UPG (
   ERRBUFF       OUT VARCHAR2,
   RETCODE       OUT VARCHAR2,
   P_LEDGER_ID   IN  NUMBER,
   P_LE_ID       IN  NUMBER, 
   P_PERIOD   IN     VARCHAR2)
IS
   CNUMBER    NUMBER;
   V_COUNT1   NUMBER := 0;
   V_COUNT2   NUMBER := 0;


   CURSOR C1
   IS
        SELECT DISTINCT ITEM.CONCATENATED_SEGMENTS,
               ITEM.INVENTORY_ITEM_ID,
               MMT.TRANSACTION_ID,
               --MMT.TRANSFER_TRANSACTION_ID,
               (SELECT TRANSACTION_ID FROM MTL_MATERIAL_TRANSACTIONS
                WHERE TRANSFER_TRANSACTION_ID = MMT.TRANSACTION_ID) TRANSFER_TRANSACTION_ID,
               ABS (MMT.PRIMARY_QUANTITY) PRIMARY_QUANTITY,
               MMT.TRANSACTION_QUANTITY,
               MMT.ORGANIZATION_ID,
               MMT.TRANSFER_ORGANIZATION_ID,
               CASE 
                WHEN ROUND(GMF_CMCOMMON.GET_CMPT_COST (MMT.INVENTORY_ITEM_ID, MP.ATTRIBUTE15, TRUNC (OP.END_DATE), 1000,0),9) > 0
                THEN ROUND(GMF_CMCOMMON.GET_CMPT_COST (MMT.INVENTORY_ITEM_ID, MP.ATTRIBUTE15, TRUNC (OP.END_DATE), 1000,0),9)                    
                ELSE ROUND(GMF_CMCOMMON.GET_CMPT_COST (MMT.INVENTORY_ITEM_ID, MMT.ORGANIZATION_ID, TRUNC (OP.END_DATE), 1000, 0),9) 
                END AS UNIT_PRICE,
                MMT.TRANSFER_PRICE,
                MMT.TRANSFER_COST,
                MMT.ATTRIBUTE14,
                MMT.ATTRIBUTE15    
          FROM MTL_SYSTEM_ITEMS_B_KFV ITEM,
               MTL_MATERIAL_TRANSACTIONS MMT,
               GMF_PERIOD_STATUSES OP,
               ORG_ORGANIZATION_DEFINITIONS OOD,
               ORG_ORGANIZATION_DEFINITIONS OOD1,
               MTL_PARAMETERS MP
         WHERE NVL (MMT.OPM_COSTED_FLAG, 'N') <> 'Y'
               AND TRUNC (MMT.TRANSACTION_DATE) BETWEEN (OP.START_DATE) AND (OP.END_DATE)
               AND OP.PERIOD_CODE = P_PERIOD
              -- AND OOD.LEGAL_ENTITY = P_LE_ID  --24275 (NWEL), 23276 ( NEL LE)
               AND OOD1.LEGAL_ENTITY = P_LE_ID --24275 (NWEL), 23276 ( NEL LE)
               AND MMT.INVENTORY_ITEM_ID = ITEM.INVENTORY_ITEM_ID
               AND MMT.ORGANIZATION_ID = ITEM.ORGANIZATION_ID
               AND MMT.ORGANIZATION_ID = OOD.ORGANIZATION_ID
               AND OOD.OPERATING_UNIT <> OOD1.OPERATING_UNIT
               AND MMT.TRANSFER_ORGANIZATION_ID = OOD1.ORGANIZATION_ID
               AND OOD.ORGANIZATION_ID = MP.ORGANIZATION_ID
               AND MMT.TRANSACTION_TYPE_ID IN (3, 12, 21,61,62) --3 (DIRECT ORG TRANSFER), 12 (INTRANSIT RECEIPT), 21 (INTRANSIT SHIPMENT), 62 (INT ORDER INTR SHIP)
               AND  (MMT.PRIMARY_QUANTITY)<0
               and mmt.transfer_price=0
           ORDER BY MMT.TRANSACTION_ID;

    V_DATE_FROM  DATE;
    V_DATE_TO    DATE;

BEGIN
    SELECT START_DATE, END_DATE 
    INTO V_DATE_FROM, V_DATE_TO
    FROM GMF_PERIOD_STATUSES
    WHERE LEGAL_ENTITY_ID = P_LE_ID 
    AND PERIOD_CODE = P_PERIOD;

   DELETE FROM XX_MTL_MATERIAL_TRANSACTIONS
   --WHERE TO_CHAR (TRUNC (TRANSACTION_DATE), 'MON-RR') = P_PERIOD
   WHERE TRUNC(TRANSACTION_DATE) BETWEEN V_DATE_FROM AND V_DATE_TO
   AND ORGANIZATION_ID IN (SELECT ORGANIZATION_ID FROM ORG_ORGANIZATION_DEFINITIONS 
                           WHERE LEGAL_ENTITY = P_LE_ID);

   INSERT INTO XX_MTL_MATERIAL_TRANSACTIONS
   SELECT *
   FROM MTL_MATERIAL_TRANSACTIONS
   --WHERE TO_CHAR (TRUNC (TRANSACTION_DATE), 'MON-RR') = P_PERIOD'
   WHERE TRUNC(TRANSACTION_DATE) BETWEEN V_DATE_FROM AND V_DATE_TO
   AND   TRANSACTION_TYPE_ID IN (3, 12, 21, 61, 62) --3 (DIRECT ORG TRANSFER), 12 (INTRANSIT RECEIPT), 21 (INTRANSIT SHIPMENT), 62 (INT ORDER INTR SHIP)
   AND ORGANIZATION_ID IN (SELECT ORGANIZATION_ID FROM ORG_ORGANIZATION_DEFINITIONS 
                           WHERE LEGAL_ENTITY = P_LE_ID);
       

   FOR I IN C1
   LOOP
      UPDATE MTL_MATERIAL_TRANSACTIONS
      SET    TRANSFER_PRICE = I.UNIT_PRICE,    --0--TRANSFER_PRICE+I.UNIT_PRICE  --,TRANSACTION_COST=0            
             ATTRIBUTE15 = 0,                                    --I.UNIT_PRICE                      
             ATTRIBUTE14 = 'Y',
             TRANSFER_COST = I.UNIT_PRICE
      WHERE TRANSACTION_ID = I.TRANSACTION_ID;

      V_COUNT1 := V_COUNT1 + 1;

      --DBMS_OUTPUT.PUT_LINE('TESTED ROW :'||V_COUNT1);
      UPDATE MTL_MATERIAL_TRANSACTIONS
      SET    TRANSFER_PRICE = I.UNIT_PRICE,               --,TRANSACTION_COST=0                                          
             ATTRIBUTE15 = I.UNIT_PRICE,
             ATTRIBUTE14 = 'Y',
             TRANSFER_COST = I.UNIT_PRICE
       WHERE TRANSACTION_ID = I.TRANSFER_TRANSACTION_ID;

      V_COUNT2 := V_COUNT2 + 1;
      
   END LOOP;
   
   COMMIT;

   --   DBMS_OUTPUT.PUT_LINE('UPDATED ROW :'||V_COUNT1);
   -- DBMS_OUTPUT.PUT_LINE('UPDATED ROW :'||V_COUNT2);   
   
   
EXCEPTION

   WHEN OTHERS
   
   THEN
      RAISE_APPLICATION_ERROR (
      -20001,'An error was encountered - ' || SQLCODE || ' -ERROR- ' || SQLERRM);
END;
/